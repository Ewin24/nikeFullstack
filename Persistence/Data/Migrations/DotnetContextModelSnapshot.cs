// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Data;

#nullable disable

namespace Persistence.Data.Migrations
{
    [DbContext(typeof(DotnetContext))]
    partial class DotnetContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb3_general_ci")
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb3");

            modelBuilder.Entity("Persistence.Entities.Carrito", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("idCarrito");

                    b.Property<DateOnly?>("FechaCreacion")
                        .HasColumnType("date");

                    b.Property<int>("UsuarioIdusuario")
                        .HasColumnType("int")
                        .HasColumnName("usuario_idusuario");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "UsuarioIdusuario" }, "fk_Carrito_usuario1_idx");

                    b.ToTable("carrito", (string)null);
                });

            modelBuilder.Entity("Persistence.Entities.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("idCategoria");

                    b.Property<string>("Nombre")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("categoria", (string)null);
                });

            modelBuilder.Entity("Persistence.Entities.Detallecarrito", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("idDetalleCarrito");

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("CarritoIdCarrito")
                        .HasColumnType("int")
                        .HasColumnName("Carrito_idCarrito");

                    b.Property<int>("ProductoIdProducto")
                        .HasColumnType("int")
                        .HasColumnName("Producto_idProducto");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CarritoIdCarrito" }, "fk_DetalleCarrito_Carrito1_idx");

                    b.HasIndex(new[] { "ProductoIdProducto" }, "fk_DetalleCarrito_Producto1_idx");

                    b.ToTable("detallecarrito", (string)null);
                });

            modelBuilder.Entity("Persistence.Entities.Detalleorden", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("idDetalleOrden");

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<int>("OrdenIdOrden")
                        .HasColumnType("int")
                        .HasColumnName("Orden_idOrden");

                    b.Property<double?>("PrecioUnitario")
                        .HasColumnType("double");

                    b.Property<int>("ProductoIdProducto")
                        .HasColumnType("int")
                        .HasColumnName("Producto_idProducto");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "OrdenIdOrden" }, "fk_DetalleOrden_Orden1_idx");

                    b.HasIndex(new[] { "ProductoIdProducto" }, "fk_DetalleOrden_Producto1_idx");

                    b.ToTable("detalleorden", (string)null);
                });

            modelBuilder.Entity("Persistence.Entities.Inventario", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("idInventario");

                    b.Property<int?>("Existencias")
                        .HasColumnType("int")
                        .HasColumnName("existencias");

                    b.Property<DateOnly?>("FechaActualizacion")
                        .HasColumnType("date")
                        .HasColumnName("fechaActualizacion");

                    b.Property<int>("ProductoIdProducto")
                        .HasColumnType("int")
                        .HasColumnName("Producto_idProducto");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ProductoIdProducto" }, "fk_Inventario_Producto1_idx");

                    b.ToTable("inventario", (string)null);
                });

            modelBuilder.Entity("Persistence.Entities.Orden", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("idOrden");

                    b.Property<DateOnly?>("FechaOrden")
                        .HasColumnType("date");

                    b.Property<double?>("Total")
                        .HasColumnType("double");

                    b.Property<int>("UsuarioIdusuario")
                        .HasColumnType("int")
                        .HasColumnName("usuario_idusuario");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "UsuarioIdusuario" }, "fk_Orden_usuario1_idx");

                    b.ToTable("orden", (string)null);
                });

            modelBuilder.Entity("Persistence.Entities.Persona", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("idPersona");

                    b.Property<string>("Apellido")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("apellido");

                    b.Property<string>("Nombre")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("persona", (string)null);
                });

            modelBuilder.Entity("Persistence.Entities.Producto", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    b.Property<int>("CategoriaIdCategoria")
                        .HasColumnType("int")
                        .HasColumnName("Categoria_idCategoria");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Precio")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CategoriaIdCategoria" }, "fk_Producto_Categoria1_idx");

                    b.ToTable("producto", (string)null);
                });

            modelBuilder.Entity("Persistence.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("idusuario");

                    b.Property<string>("Celular")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("celular");

                    b.Property<string>("Contraseña")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Correo")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("correo");

                    b.Property<int>("PersonaIdPersona")
                        .HasColumnType("int")
                        .HasColumnName("Persona_idPersona");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "PersonaIdPersona" }, "fk_usuario_Persona_idx");

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("Persistence.Entities.Carrito", b =>
                {
                    b.HasOne("Persistence.Entities.Usuario", "UsuarioIdusuarioNavigation")
                        .WithMany("Carritos")
                        .HasForeignKey("UsuarioIdusuario")
                        .IsRequired()
                        .HasConstraintName("fk_Carrito_usuario1");

                    b.Navigation("UsuarioIdusuarioNavigation");
                });

            modelBuilder.Entity("Persistence.Entities.Detallecarrito", b =>
                {
                    b.HasOne("Persistence.Entities.Carrito", "CarritoIdCarritoNavigation")
                        .WithMany("Detallecarritos")
                        .HasForeignKey("CarritoIdCarrito")
                        .IsRequired()
                        .HasConstraintName("fk_DetalleCarrito_Carrito1");

                    b.HasOne("Persistence.Entities.Producto", "ProductoIdProductoNavigation")
                        .WithMany("Detallecarritos")
                        .HasForeignKey("ProductoIdProducto")
                        .IsRequired()
                        .HasConstraintName("fk_DetalleCarrito_Producto1");

                    b.Navigation("CarritoIdCarritoNavigation");

                    b.Navigation("ProductoIdProductoNavigation");
                });

            modelBuilder.Entity("Persistence.Entities.Detalleorden", b =>
                {
                    b.HasOne("Persistence.Entities.Orden", "OrdenIdOrdenNavigation")
                        .WithMany("Detalleordens")
                        .HasForeignKey("OrdenIdOrden")
                        .IsRequired()
                        .HasConstraintName("fk_DetalleOrden_Orden1");

                    b.HasOne("Persistence.Entities.Producto", "ProductoIdProductoNavigation")
                        .WithMany("Detalleordens")
                        .HasForeignKey("ProductoIdProducto")
                        .IsRequired()
                        .HasConstraintName("fk_DetalleOrden_Producto1");

                    b.Navigation("OrdenIdOrdenNavigation");

                    b.Navigation("ProductoIdProductoNavigation");
                });

            modelBuilder.Entity("Persistence.Entities.Inventario", b =>
                {
                    b.HasOne("Persistence.Entities.Producto", "ProductoIdProductoNavigation")
                        .WithMany("Inventarios")
                        .HasForeignKey("ProductoIdProducto")
                        .IsRequired()
                        .HasConstraintName("fk_Inventario_Producto1");

                    b.Navigation("ProductoIdProductoNavigation");
                });

            modelBuilder.Entity("Persistence.Entities.Orden", b =>
                {
                    b.HasOne("Persistence.Entities.Usuario", "UsuarioIdusuarioNavigation")
                        .WithMany("Ordens")
                        .HasForeignKey("UsuarioIdusuario")
                        .IsRequired()
                        .HasConstraintName("fk_Orden_usuario1");

                    b.Navigation("UsuarioIdusuarioNavigation");
                });

            modelBuilder.Entity("Persistence.Entities.Producto", b =>
                {
                    b.HasOne("Persistence.Entities.Categoria", "CategoriaIdCategoriaNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("CategoriaIdCategoria")
                        .IsRequired()
                        .HasConstraintName("fk_Producto_Categoria1builder");

                    b.Navigation("CategoriaIdCategoriaNavigation");
                });

            modelBuilder.Entity("Persistence.Entities.Usuario", b =>
                {
                    b.HasOne("Persistence.Entities.Persona", "PersonaIdPersonaNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("PersonaIdPersona")
                        .IsRequired()
                        .HasConstraintName("fk_usuario_Persona");

                    b.Navigation("PersonaIdPersonaNavigation");
                });

            modelBuilder.Entity("Persistence.Entities.Carrito", b =>
                {
                    b.Navigation("Detallecarritos");
                });

            modelBuilder.Entity("Persistence.Entities.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Persistence.Entities.Orden", b =>
                {
                    b.Navigation("Detalleordens");
                });

            modelBuilder.Entity("Persistence.Entities.Persona", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Persistence.Entities.Producto", b =>
                {
                    b.Navigation("Detallecarritos");

                    b.Navigation("Detalleordens");

                    b.Navigation("Inventarios");
                });

            modelBuilder.Entity("Persistence.Entities.Usuario", b =>
                {
                    b.Navigation("Carritos");

                    b.Navigation("Ordens");
                });
#pragma warning restore 612, 618
        }
    }
}
